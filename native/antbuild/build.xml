<project name="sdljoystick4java" default="dll" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <property environment="env"/>
    <property file="build.properties"/>

    <taskdef resource="net/sf/antcontrib/antlib.xml" classpath="${ant-contrib.path}"/>

    <target name="init">
      <property name="platform" value="${env.Platform}"/>
      <fail message="Platform Error:${line.separator}* Invalid platform (only x86 and x64 supported).${line.separator}* Run the appropriate vcvars{32,64}.bat before invoking Ant.">
        <condition>
          <and>
            <not><equals arg1="${platform}" arg2="x86"/></not>
            <not><equals arg1="${platform}" arg2="x64"/></not>
          </and>
        </condition>
      </fail>
      <echo>Building for platform: ${platform}</echo>
      <condition property="is-x86">
        <equals arg1="${platform}" arg2="x86"/>
      </condition>
      <condition property="is-x64">
        <equals arg1="${platform}" arg2="x64"/>
      </condition>
      
      <property name="jdk-home.dir" location="${jdk-home.x86.dir}" if:set="is-x86"/>
      <property name="jdk-home.dir" location="${jdk-home.x64.dir}" if:set="is-x64"/>
      <echo>Using JDK_HOME: ${jdk-home.dir}</echo>
      
      <property name="sdl-include.dir" location="${sdl.dir}/include"/>
      <property name="sdl-lib.dir" location="${sdl.dir}/lib"/>
      
      <property name="build.dir" location="build/${platform}"/>
      <property name="out.dir" location="out/${platform}"/>
      
      <property name="libname" value="sdljoystick4java"/> <!-- Used for outfile files -->

      <property name="pch.file" location="${build.dir}/${libname}.pch" if:set="pch.source.file"/>
      
      <property name="cc" value="cl.exe"/>
      <property name="link" value="link.exe"/>
      
      <property name="compiler.include.args" 
                value='/I"${jdk-home.dir}\include" /I"${jdk-home.dir}\include\win32" /I"${sdl-include.dir}"'/>
      <property name="compiler.misc.args" 
                value='/c /TP /std:c++14 /permissive- /W3 /WX- /diagnostics:classic /sdl- /analyze-'/>
      <property name="compiler.defines.args" 
                value='/D WIN32 /D NDEBUG /D _WINDOWS /D _USRDLL /D _WINDLL /D _UNICODE /D UNICODE'/>
      <property name="compiler.codegen.args" value='/EHsc /Gy /Gd /fp:precise'/>
      <property name="compiler.optimization.args" value='/O2 /Oi /Oy-'/>
      <property name="compiler.linking.args" value='/MD'/>
      <property name="compiler.language.args" value='/Zc:wchar_t /Zc:forScope /Zc:inline'/>
      <property name="compiler.output.args" value='/Fo"${build.dir}\\"'/>
      
      <property name="compiler.gen-pch.args" value='/Yc"pch.h" /Fp"${pch.file}"'/>
      <property name="compiler.use-pch.args" value='/Yu"pch.h" /Fp"${pch.file}"'/>
      
      <property name="compiler.args" value=
          '${compiler.include.args} ${compiler.misc.args} ${compiler.defines.args} ${compiler.codegen.args} ${compiler.optimization.args} ${compiler.linking.args} ${compiler.language.args} ${compiler.output.args}'/>
      
      <property name="linker.output.args" value=
          '/DLL /out:"${out.dir}\${libname}.dll" /IMPLIB:"${out.dir}\${libname}.lib"'/>
      <property name="linker.misc.args"  value=
          '/INCREMENTAL:NO /MANIFEST /MANIFESTUAC:NO /manifest:embed /SUBSYSTEM:WINDOWS /TLBID:1'/>
      <property name="linker.optimization.args" value='/OPT:REF /OPT:ICF'/>
      <property name="linker.safety.args" value='/DYNAMICBASE /NXCOMPAT'/>
      <property name="linker.stdlib.args" value=
          'KERNEL32.LIB USER32.LIB GDI32.LIB WINSPOOL.LIB COMDLG32.LIB ADVAPI32.LIB SHELL32.LIB OLE32.LIB OLEAUT32.LIB UUID.LIB ODBC32.LIB ODBCCP32.LIB'/>
      <property name="linker.lib.args" value='"${sdl-lib.dir}\${platform}\SDL2.LIB"'/>
      <property name="linker.machine.args" value='/MACHINE:X86 /SAFESEH' if:set="is-x86"/>
      <property name="linker.machine.args" value='/MACHINE:X64' if:set="is-x64"/>

      <property name="linker.args" value=
          "${linker.output.args} ${linker.misc.args} ${linker.optimization.args} ${linker.safety.args} ${linker.stdlib.args} ${linker.lib.args} ${linker.machine.args} ${linker.machine.args}"/>
      
      <fileset id="source.files" dir="${src.dir}">
        <include name="*.cpp"/>
        <exclude name="${pch.source.file}" if:set="pch.source.file"/>
      </fileset>
      
      <filelist id="pch-source.filelist" dir="${src.dir}" files="${pch.source.file}" if:set="pch.source.file"/>
      
      <property name="force.rebuild" value="false"/>
                
      <mkdir dir="${build.dir}"/>
      <mkdir dir="${out.dir}"/>
    </target>
    
    <target name="gen-pch" depends="init" description="Generate PCH" if="pch.source.file">
      <apply executable="${cc}" dest="${build.dir}" skipemptyfilesets="true" verbose="true" force="${force.rebuild}">
        <filelist refid="pch-source.filelist"/>
        <mapper type="merge" to="${pch.file}"/>
        <arg line="${compiler.args}"/>
        <arg line="${compiler.gen-pch.args}"/>
        <srcfile/>
      </apply>
    </target>
    
    <target name="compile" depends="gen-pch" description="Compile sources">
      <apply executable="${cc}" dest="${build.dir}" skipemptyfilesets="true" verbose="true" force="${force.rebuild}">
        <fileset refid="source.files"/>
        <mapper type="glob" from="*.cpp" to="*.obj"/>
        <arg line="${compiler.args}"/>
        <arg line="${compiler.use-pch.args}" if:set="pch.source.file"/>
        <srcfile/>
      </apply>
    </target>

    <target name="dll" depends="compile" description="Build DLL">
      <apply executable="${link}" dest="${out.dir}" skipemptyfilesets="true" verbose="true"
             parallel="true" force="${force.rebuild}">
        <fileset dir="${build.dir}">
          <include name="*.obj"/>
        </fileset>
        <mapper type="merge" to="${libname}.dll"/>
        <arg line="${linker.args}"/>
        <srcfile/>
      </apply>
    </target>

    <target name="clean" depends="init" description="Clean output directories">
      <delete dir="${build.dir}"/>
      <delete dir="${out.dir}"/>
    </target>

</project>
